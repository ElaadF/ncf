 #######################################################
#
# Read a file into a string
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "tmp"   string => getenv("TEMP", 1024); 
    "file"  string => "/etc/hosts";
    "lens1" string => "Hosts";
    "path"  string => "/etc/hosts/1/ipaddr";
    "value" string => "127.0.0.1";
    "lens2" string => "";
}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => file_augeas_set("${init.path}", "${init.value}", "${init.lens1}", "${init.file}");
    "ph2" usebundle => file_augeas_set("${init.path}", "${init.value}", "", "");
}

#######################################################

bundle agent check
{
  classes:
    
    "ok_1" expression => "file_augeas_set_${init.lens1}_kept.!file_augeas_set_${init.lens1}_repaired.!file_augeas_set_${init.lens1}_error";
    "ok_2" expression => "file_augeas_set_${init.lens2}_kept.!file_augeas_set_${init.lens2}_repaired.!file_augeas_set_${init.lens2}_error";
 
    "ok" expression => "ok_1.ok_2";
  
  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}


